{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Varan\\\\Desktop\\\\Code\\\\React-Native\\\\Stephen\\\\code\\\\rn-starter\\\\src\\\\screens\\\\ColorScreen.js\";\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\n\nvar ColorScreen = function ColorScreen() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      colors = _useState2[0],\n      setColors = _useState2[1];\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    title: \"Add a color\",\n    onPress: function onPress() {\n      setColors([].concat(_toConsumableArray(colors), [randomRGB()]));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }\n  }), React.createElement(FlatList, {\n    data: colors,\n    keyExtractor: function keyExtractor(item) {\n      return item;\n    },\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: {\n          height: 100,\n          width: 100,\n          backgroundColor: randomRGB()\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 25\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }));\n};\n\nvar randomRGB = function randomRGB() {\n  var red = Math.floor(Math.random() * 255);\n  var green = Math.floor(Math.random() * 255);\n  var blue = Math.floor(Math.random() * 255);\n  var rgb = \"rgb(\" + red + \", \" + green + \", \" + blue + \")\";\n  return rgb;\n};\n\nvar styles = StyleSheet.create({});\nexport default ColorScreen;","map":{"version":3,"sources":["C:/Users/Varan/Desktop/Code/React-Native/Stephen/code/rn-starter/src/screens/ColorScreen.js"],"names":["React","useState","ColorScreen","colors","setColors","randomRGB","item","height","width","backgroundColor","red","Math","floor","random","green","blue","rgb","styles","StyleSheet","create"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;;;;AAGA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAAA,kBACMD,QAAQ,CAAC,EAAD,CADd;AAAA;AAAA,MACfE,MADe;AAAA,MACPC,SADO;;AAGtB,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AACI,IAAA,KAAK,EAAC,aADV;AAEI,IAAA,OAAO,EAAE,mBAAM;AACXA,MAAAA,SAAS,8BAAKD,MAAL,IAAaE,SAAS,EAAtB,GAAT;AACH,KAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAQI,oBAAC,QAAD;AACI,IAAA,IAAI,EAAEF,MADV;AAEI,IAAA,YAAY,EAAE,sBAAAG,IAAI;AAAA,aAAIA,IAAJ;AAAA,KAFtB;AAGI,IAAA,UAAU,EAAE,0BAAY;AAAA,UAAVA,IAAU,QAAVA,IAAU;AACpB,aAEI,oBAAC,IAAD;AACI,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE,GAAV;AAAeC,UAAAA,KAAK,EAAE,GAAtB;AAA2BC,UAAAA,eAAe,EAAEJ,SAAS;AAArD,SADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ;AAMH,KAVL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CADJ;AAyBH,CA5BD;;AA8BA,IAAMA,SAAS,GAAG,SAAZA,SAAY,GAAM;AACpB,MAAMK,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAZ;AACA,MAAMC,KAAK,GAAGH,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAd;AACA,MAAME,IAAI,GAAGJ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAb;AACA,MAAMG,GAAG,YAAUN,GAAV,UAAkBI,KAAlB,UAA4BC,IAA5B,MAAT;AACA,SAAOC,GAAP;AACH,CAND;;AASA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf;AAKA,eAAejB,WAAf","sourcesContent":["import React, {useState} from 'react'\r\nimport { View, Button, StyleSheet, FlatList } from 'react-native'\r\n\r\nconst ColorScreen = () => {\r\n    const [colors, setColors] = useState([]) \r\n\r\n    return (\r\n        <View>\r\n            <Button\r\n                title=\"Add a color\"\r\n                onPress={() => {\r\n                    setColors([...colors, randomRGB()])\r\n                }}    \r\n            />\r\n\r\n            <FlatList\r\n                data={colors}\r\n                keyExtractor={item => item}\r\n                renderItem={({item}) => {\r\n                    return (\r\n                        \r\n                        <View \r\n                            style={{ height: 100, width: 100, backgroundColor: randomRGB()}}\r\n                        />\r\n                    ) \r\n                }          \r\n            }\r\n            />\r\n\r\n        </View>\r\n    )  \r\n}\r\n\r\nconst randomRGB = () => {\r\n    const red = Math.floor(Math.random() * 255)\r\n    const green = Math.floor(Math.random() * 255)\r\n    const blue = Math.floor(Math.random() * 255)\r\n    const rgb = `rgb(${red}, ${green}, ${blue})`\r\n    return rgb\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n})\r\n\r\n\r\nexport default ColorScreen"]},"metadata":{},"sourceType":"module"}