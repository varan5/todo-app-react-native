{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Varan\\\\Desktop\\\\Code\\\\React-Native\\\\Stephen\\\\code\\\\rn-starter\\\\src\\\\screens\\\\ColorScreen.js\";\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\n\nvar ColorScreen = function ColorScreen() {\n  var _usestate = usestate([]),\n      _usestate2 = _slicedToArray(_usestate, 2),\n      colors = _usestate2[0],\n      setColors = _usestate2[1];\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    title: \"Add a color\",\n    onpress: function onpress() {\n      setColors([].concat(_toConsumableArray(colors), [randomRGB()]));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: {\n      height: 100,\n      width: 100,\n      backgroundColor: randomRGB()\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }));\n};\n\nvar randomRGB = function randomRGB() {\n  var red = Math.floor(Math.random() * 255);\n  var green = Math.floor(Math.random() * 255);\n  var blue = Math.floor(Math.random() * 255);\n  var rgb = \"rgb(\" + red + \", \" + green + \", \" + blue + \")\";\n  return rgb;\n};\n\nvar styles = StyleSheet.create({});\nexport default ColorScreen;","map":{"version":3,"sources":["C:/Users/Varan/Desktop/Code/React-Native/Stephen/code/rn-starter/src/screens/ColorScreen.js"],"names":["React","useState","ColorScreen","usestate","colors","setColors","randomRGB","height","width","backgroundColor","red","Math","floor","random","green","blue","rgb","styles","StyleSheet","create"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;;;AAGA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAAA,kBACMC,QAAQ,CAAC,EAAD,CADd;AAAA;AAAA,MACfC,MADe;AAAA,MACPC,SADO;;AAGtB,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AACI,IAAA,KAAK,EAAC,aADV;AAEI,IAAA,OAAO,EAAE,mBAAM;AACXA,MAAAA,SAAS,8BAAKD,MAAL,IAAaE,SAAS,EAAtB,GAAT;AACH,KAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAOI,oBAAC,IAAD;AACI,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE,GAAV;AAAeC,MAAAA,KAAK,EAAE,GAAtB;AAA2BC,MAAAA,eAAe,EAAEH,SAAS;AAArD,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CADJ;AAaH,CAhBD;;AAkBA,IAAMA,SAAS,GAAG,SAAZA,SAAY,GAAM;AACpB,MAAMI,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAZ;AACA,MAAMC,KAAK,GAAGH,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAd;AACA,MAAME,IAAI,GAAGJ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAb;AACA,MAAMG,GAAG,YAAUN,GAAV,UAAkBI,KAAlB,UAA4BC,IAA5B,MAAT;AACA,SAAOC,GAAP;AACH,CAND;;AASA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf;AAKA,eAAejB,WAAf","sourcesContent":["import React, {useState} from 'react'\r\nimport { View, Button, StyleSheet } from 'react-native'\r\n\r\nconst ColorScreen = () => {\r\n    const [colors, setColors] = usestate([]) \r\n\r\n    return (\r\n        <View>\r\n            <Button\r\n                title=\"Add a color\"\r\n                onpress={() => {\r\n                    setColors([...colors, randomRGB()])\r\n                }}    \r\n            />\r\n            <View \r\n                style={{ height: 100, width: 100, backgroundColor: randomRGB()}}\r\n            />\r\n        </View>\r\n    )  \r\n}\r\n\r\nconst randomRGB = () => {\r\n    const red = Math.floor(Math.random() * 255)\r\n    const green = Math.floor(Math.random() * 255)\r\n    const blue = Math.floor(Math.random() * 255)\r\n    const rgb = `rgb(${red}, ${green}, ${blue})`\r\n    return rgb\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n})\r\n\r\n\r\nexport default ColorScreen"]},"metadata":{},"sourceType":"module"}